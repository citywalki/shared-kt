[versions]
arrow = "2.1.0"
cryptography = "0.4.0"
detekt = "1.23.8"
jackson = "2.18.2"
java-compile-toolchain = "21"
jvm-target = "21"
komapper = "5.0.0"
kotlin = "2.1.20"
kotlinx-serialization = "1.8.1"
quarkus = "3.21.4"
spotless = "7.0.2"
spring-boot = "3.4.4"
springdoc = "2.7.0"

[plugins]
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
google-ksp = { id = "com.google.devtools.ksp", version = "2.1.20-2.0.0" }
graalvm-buildtools = { id = "org.graalvm.buildtools.native", version = "0.10.2" }
kotlin-allopen = { id = "org.jetbrains.kotlin.plugin.allopen", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
ktor = { id = "io.ktor.plugin", version = "3.1.1" }
netflix-dgs-codegen = { id = "com.netflix.dgs.codegen", version = "6.2.1" }
quarkus = { id = "io.quarkus", version.ref = "quarkus" }
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot" }
spring-dependencymanagement = { id = "io.spring.dependency-management", version = "1.1.7" }

[libraries]
detektGradlePlugin = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version = "1.23.8" }
arrow-core = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }
auth0-jwt = { module = "com.auth0:java-jwt", version = "4.5.0" }
cryptography-core = { module = "dev.whyoleg.cryptography:cryptography-core", version.ref = "cryptography" }
cryptography-jdk = { module = "dev.whyoleg.cryptography:cryptography-provider-jdk", version.ref = "cryptography" }
hikaricp = { module = "com.zaxxer:HikariCP", version = "4.0.3" }
jackson-annotations = { module = "com.fasterxml.jackson.core:jackson-annotations", version.ref = "jackson" }
jackson-core = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "jackson" }
jakarta-persistence-api = { module = "jakarta.persistence:jakarta.persistence-api", version = "3.2.0" }
jakarta-servlet-api = { module = "jakarta.servlet:jakarta.servlet-api", version = "6.1.0" }
jakarta-validation-api = { module = "jakarta.validation:jakarta.validation-api", version = "3.1.0" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher" }
komapper-dialect-h2-jdbc = { module = "org.komapper:komapper-dialect-h2-jdbc" }
komapper-dialect-h2-r2dbc = { module = "org.komapper:komapper-dialect-h2-r2dbc" }
komapper-dialect-postgresql-jdbc = { module = "org.komapper:komapper-dialect-postgresql-jdbc", version.ref = "komapper" }
komapper-processor = { module = "org.komapper:komapper-processor", version.ref = "komapper" }
komapper-quarkus-jdbc = { module = "org.komapper:komapper-quarkus-jdbc", version.ref = "komapper" }
komapper-spring-boot-starter-jdbc = { module = "org.komapper:komapper-spring-boot-starter-jdbc", version.ref = "komapper" }
komapper-spring-boot-starter-r2dbc = { module = "org.komapper:komapper-spring-boot-starter-r2dbc" }
komapper-spring-boot-starter-test-jdbc = { module = "org.komapper:komapper-spring-boot-starter-test-jdbc" }
komapper-starter-jdbc = { module = "org.komapper:komapper-starter-jdbc" }
komapper-starter-r2dbc = { module = "org.komapper:komapper-starter-r2dbc" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-junit5 = { module = "org.jetbrains.kotlin:kotlin-test-junit5" }
kotlin-reactor-extensions = { module = "io.projectreactor.kotlin:reactor-kotlin-extensions", version = "1.2.3" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect" }
kotlinx-coroutines-reactor = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactor", version = "1.10.1" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version = "0.6.1" }
kotlinx-markdown = { module = "org.jetbrains:markdown", version = "0.7.3" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-serialization-protobuf = { module = "org.jetbrains.kotlinx:kotlinx-serialization-protobuf", version.ref = "kotlinx-serialization" }
liquibase-core = { module = "org.liquibase:liquibase-core" }
log4j2 = { module = "org.apache.logging.log4j:log4j-core", version = "2.24.3" }
log4j2-slf4j = { module = "org.apache.logging.log4j:log4j-slf4j2-impl", version = "2.24.3" }
shared-api = { module = "com.github.walkin.shared:api" }
shared-autoconfigure = { module = "com.github.walkin.shared:autoconfigure" }
slf4k = { module = "ca.solo-studios:slf4k", version = "0.5.4" }
spotless-gradle = { module = "com.diffplug.spotless:spotless-plugin-gradle", version.ref = "spotless" }
spring-boot = { module = "org.springframework.boot:spring-boot-starter", version.ref = "spring-boot" }
spring-boot-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "spring-boot" }
spring-boot-autoconfigure-processor = { module = "org.springframework.boot:spring-boot-autoconfigure-processor", version.ref = "spring-boot" }
spring-boot-configuration-processor = { module = "org.springframework.boot:spring-boot-configuration-processor", version.ref = "spring-boot" }
spring-boot-devtools = { module = "org.springframework.boot:spring-boot-devtools", version.ref = "spring-boot" }
spring-boot-docker-compose = { module = "org.springframework.boot:spring-boot-docker-compose", version.ref = "spring-boot" }
spring-boot-graphql = { module = "org.springframework.boot:spring-boot-starter-graphql", version.ref = "spring-boot" }
spring-boot-jdbc = { module = "org.springframework.boot:spring-boot-starter-jdbc", version.ref = "spring-boot" }
spring-boot-log4j2 = { module = "org.springframework.boot:spring-boot-starter-log4j2" }
spring-boot-security = { module = "org.springframework.boot:spring-boot-starter-security", version.ref = "spring-boot" }
spring-boot-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "spring-boot" }
spring-boot-webmvc = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "spring-boot" }
spring-data-commons = { module = "org.springframework.data:spring-data-commons", version.ref = "spring-boot" }
springdoc-openapi-webmvc = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "springdoc" }
testcontainers = { module = "org.testcontainers:testcontainers", version = "1.20.3" }
testcontainers-postgres = { module = "org.testcontainers:postgresql", version = "1.19.8" }

[bundles]
